source:")
ggplot(ads1, aes(year, count, fill = race_sex)) +
geom_col(position = "dodge") +
labs(
title="The Race and Sex of the NCAA Athletic Directors 2012-2021",
x = "year",
y = "count",
caption = "From 2012 through 2021, the majority of NCAA Athletic Directors were white males.
source:NCAA Demographics Data showing race, gender for athletic directors")
library(tidyverse)
SF <- read_csv("assets/data/SF_311.csv")
Sports_Race_ADs <- read_csv('Sports_Race_ADs.csv', skip =1)
#This cleans column names
Sports_Race_ADs <- janitor::clean_names(Sports_Race_ADs)
ggplot(Sports_Race_ADs, aes(x=year)) +
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "red") +
geom_line(aes(y=male_other), color = "green") +
geom_line(aes(y=female_white), color = "pink") +
geom_line(aes(y=female_black), color = "purple") +
geom_line(aes(y=female_other), color = "yellow")
Sports_Race_ADs <- read_csv('Sports_Race_ADs.csv', skip =1)
#This cleans column names
Sports_Race_ADs <- janitor::clean_names(Sports_Race_ADs)
ggplot(Sports_Race_ADs, aes(x=year)) +
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "red") +
geom_line(aes(y=male_other), color = "green") +
geom_line(aes(y=female_white), color = "pink") +
geom_line(aes(y=female_black), color = "purple") +
geom_line(aes(y=female_other), color = "yellow")
Sports_Race_ADs <- read_csv('Sports_Race_ADs.csv', skip =1)
#This cleans column names
Sports_Race_ADs <- janitor::clean_names(Sports_Race_ADs)
ggplot(Sports_Race_ADs, aes(x=year)) +
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "red") +
geom_line(aes(y=male_other), color = "green") +
geom_line(aes(y=female_white), color = "pink") +
geom_line(aes(y=female_black), color = "purple") +
geom_line(aes(y=female_other), color = "yellow")
labs(
title="The Race and Sex of the NCAA Athletic Directors 2012-2021",
x = "year",
y = "count",
caption = "From 2012 through 2021, the majority of NCAA Athletic Directors were white males.
source:NCAA Demographics Data showing race, gender for athletic directors")
Sports_Race_ADs <- read_csv('Sports_Race_ADs.csv', skip =1)
#This cleans column names
Sports_Race_ADs <- janitor::clean_names(Sports_Race_ADs)
ggplot(Sports_Race_ADs, aes(x=year, y=total)) +
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "red") +
geom_line(aes(y=male_other), color = "green") +
geom_line(aes(y=female_white), color = "pink") +
geom_line(aes(y=female_black), color = "purple") +
geom_line(aes(y=female_other), color = "yellow")
labs(
title="The Race and Sex of the NCAA Athletic Directors 2012-2021",
x = "year",
y = "count",
caption = "From 2012 through 2021, the majority of NCAA Athletic Directors were white males.
source:NCAA Demographics Data showing race, gender for athletic directors")
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse,rvest,janitor
library(tidyverse)
library(janitor)
library(rvest)
setwd("~/GitHub/Code/Cassie_Peo_jour472/472 Assignment 1")
baltcity_income<- read_csv("baltcity_income_clean.csv") %>%
as.data.frame()
View(baltcity_income)
baltcity_income <- read_csv("baltcity_income_clean.csv") %>%
as.data.frame()
baltcity_race <- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
pct_female_headed_households <- read_csv("Percent_of_Female-Headed_Households_with_Children_Under_18.csv") %>%
as.data.frame()
View(baltcity_income)
View(baltcity_race)
View(pct_female_headed_households)
View(baltcity_race)
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse,rvest,janitor
library(tidyverse)
library(janitor)
library(rvest)
library(dplyr)
library(stringr)
baltcity_income <- read_csv("baltcity_income_clean.csv") %>%
as.data.frame()
#This cleans column names
baltcity_income <- janitor::clean_names(baltcity_income)
baltcity_race <- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
#This cleans column names
baltcity_race <- janitor::clean_names(baltcity_race)
pct_female_headed_households <- read_csv("Percent_of_Female-Headed_Households_with_Children_Under_18.csv") %>%
as.data.frame()
#This cleans column names
pct_female_headed_households <- janitor::clean_names(pct_female_headed_households)
updated_baltcity_race <- baltcity_income %>%
inner_join(baltcity_race, by="geoid")
updated_maryland_county_population
View(updated_baltcity_race)
updated_baltcity_race <- baltcity_income %>%
inner_join(baltcity_race, by="geoid") %>%
select(-c(x2010, x2016, x2020, census, x1))
baltcity_income %>%
slice_max(x2020, 20)
baltcity_income %>%
slice_max(x2020, n = 20)
updated_baltcity_race <- baltcity_income %>%
inner_join(baltcity_race, by="geoid")
updated_baltcity_income %>%
slice_max(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total))
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total))
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite)
updated_baltcity_race %>%
slice_min(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite)
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mean(x2020)
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mean(x2020, na.rm = TRUE)
updated_baltcity_race %>%
slice_max(x2020, n = 20)
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mean(x2020)
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mean(x2020, na.rm = TRUE)
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
median(x2020, na.rm = TRUE)
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
median(x2020)
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
median()
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
median(x2020_total)
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
median(x2020)
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
median(x=x2020)
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
median(x='x2020')
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
median('x2020')
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
median("x2020")
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
median(x="x2020")
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
median(x="x2020", na.rm=TRUE)
top_20 <- updated_baltcity_race %>%
slice_max(x2020, n = 20)
mean(top_20$x2020)
mean(bottom_10$x2020)
top_10 <- updated_baltcity_race %>%
slice_max(x2020, n = 20)
mean(top_10$x2020)
bottom_10 <- updated_baltcity_race %>%
slice_min(x2020, n = 20)
mean(bottom_10$x2020)
130309.9 - 20813.55
top_10_mean <- mean(top_10$x2020)
(top_10_mean - bottom_10_mean) / bottom_10_mean
top_10 <- updated_baltcity_race %>%
slice_max(x2020, n = 20)
top_10_mean <- mean(top_10$x2020)
bottom_10 <- updated_baltcity_race %>%
slice_min(x2020, n = 20)
bottom_10_mean <- mean(bottom_10$x2020)
top_10_mean - bottom_10_mean
(top_10_mean - bottom_10_mean) / bottom_10_mean
female_cmbd <- updated_baltcity_race %>%
inner_join(pct_female_headed_households, by="neighborhood")
pct_female_headed_households <- pct_female_headed_households %>%
rename("csa2020" = "neighborhood")
female_cmbd <- updated_baltcity_race %>%
inner_join(pct_female_headed_households, by="neighborhood")
pct_female_headed_households <- pct_female_headed_households %>%
rename(csa2020 = "neighborhood")
pct_female_headed_households <- pct_female_headed_households %>%
rename(csa2020 = neighborhood)
pct_female_headed_households <- pct_female_headed_households %>%
rename(neighborhood = csa2020)
female_cmbd <- updated_baltcity_race %>%
inner_join(pct_female_headed_households, by="neighborhood")
View(female_cmbd)
top_20
top_20$neighborhood
distinct(top_20)$neighborhood
distinct(top_20$neighborhood)
distinct(top_20)$neighborhood
distinct(top_20 %>%
select(neighborhood))
distinct(top_20 %>%
select(neighborhood)) %>%
inner_join(female_cmbd)
distinct(top_20 %>%
select(neighborhood)) %>%
inner_join(female_cmbd) %>%
select(femhhs21)
mean(distinct(top_20 %>%
select(neighborhood)) %>%
inner_join(female_cmbd) %>%
select(femhhs21))
distinct(top_20 %>%
select(neighborhood)) %>%
inner_join(female_cmbd) %>%
select(femhhs21)
distinct(top_20 %>%
select(neighborhood)) %>%
inner_join(female_cmbd) %>%
select(femhhs21) %>%
mean()
distinct(top_20 %>%
select(neighborhood)) %>%
inner_join(female_cmbd) %>%
select(femhhs21) %>%
mean(na.rm = TRUE)
pcts <- distinct(top_20 %>%
select(neighborhood)) %>%
inner_join(female_cmbd) %>%
select(femhhs21)
pcts
mean(pcts$femhhs21)
View(top_20)
rm(top_20)
pcts <- distinct(top_10 %>%
select(neighborhood)) %>%
inner_join(female_cmbd) %>%
select(femhhs21)
mean(pcts$femhhs21)
pcts <- distinct(top_10 %>%
select(neighborhood)) %>%
inner_join(female_cmbd) %>%
select(femhhs21)
pcts <- distinct(top_10 %>%
select(neighborhood)) %>%
inner_join(female_cmbd, by = "neighborhood") %>%
select(femhhs21)
pcts <- distinct(top_10 %>%
select(neighborhood)) %>%
inner_join(female_cmbd, by = "neighborhood") %>%
select(femhhs21)
mean(pcts$femhhs21)
top_pcts <- distinct(top_10 %>%
select(neighborhood)) %>%
inner_join(female_cmbd, by = "neighborhood") %>%
select(femhhs21)
mean(top_pcts$femhhs21)
bottom_pcts <- distinct(bottom_10 %>%
select(neighborhood)) %>%
inner_join(female_cmbd, by = "neighborhood") %>%
select(femhhs21)
mean(bottom_pcts$femhhs21)
pct_female_headed_households <- pct_female_headed_households %>%
rename(neighborhood = csa2020)
baltcity_income <- read_csv("baltcity_income_clean.csv") %>%
as.data.frame()
#This cleans column names
baltcity_income <- janitor::clean_names(baltcity_income)
baltcity_race <- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
#This cleans column names
baltcity_race <- janitor::clean_names(baltcity_race)
pct_female_headed_households <- read_csv("Percent_of_Female-Headed_Households_with_Children_Under_18.csv") %>%
as.data.frame()
#This cleans column names
pct_female_headed_households <- janitor::clean_names(pct_female_headed_households)
updated_baltcity_race <- baltcity_income %>%
inner_join(baltcity_race, by="geoid")
top_10 <- updated_baltcity_race %>%
slice_max(x2020, n = 20)
top_10_mean <- mean(top_10$x2020)
bottom_10 <- updated_baltcity_race %>%
slice_min(x2020, n = 20)
bottom_10_mean <- mean(bottom_10$x2020)
top_10_mean - bottom_10_mean
(top_10_mean - bottom_10_mean) / bottom_10_mean
# The average income of the top 10% is $109496.40 more than the average income of the bottom 10%. the top 10% on average earns 5.26 times more than the bottom 10% on average.
pct_female_headed_households <- pct_female_headed_households %>%
rename(neighborhood = csa2020)
female_cmbd <- updated_baltcity_race %>%
inner_join(pct_female_headed_households, by="neighborhood")
top_pcts <- distinct(top_10 %>%
select(neighborhood)) %>%
inner_join(female_cmbd, by = "neighborhood") %>%
select(femhhs21)
mean(top_pcts$femhhs21)
bottom_pcts <- distinct(bottom_10 %>%
select(neighborhood)) %>%
inner_join(female_cmbd, by = "neighborhood") %>%
select(femhhs21)
mean(bottom_pcts$femhhs21)
```
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse,rvest,janitor
library(tidyverse)
library(janitor)
library(rvest)
library(dplyr)
library(stringr)
baltcity_income <- read_csv("baltcity_income_clean.csv") %>%
as.data.frame()
#This cleans column names
baltcity_income <- janitor::clean_names(baltcity_income)
baltcity_race <- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
#This cleans column names
baltcity_race <- janitor::clean_names(baltcity_race)
pct_female_headed_households <- read_csv("Percent_of_Female-Headed_Households_with_Children_Under_18.csv") %>%
as.data.frame()
#This cleans column names
pct_female_headed_households <- janitor::clean_names(pct_female_headed_households)
updated_baltcity_race <- baltcity_income %>%
inner_join(baltcity_race, by="geoid")
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite)
updated_baltcity_race %>%
slice_min(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite)
top_10 <- updated_baltcity_race %>%
slice_max(x2020, n = 20)
top_10_mean <- mean(top_10$x2020)
bottom_10 <- updated_baltcity_race %>%
slice_min(x2020, n = 20)
bottom_10_mean <- mean(bottom_10$x2020)
top_10_mean - bottom_10_mean
(top_10_mean - bottom_10_mean) / bottom_10_mean
# The average income of the top 10% is $109496.40 more than the average income of the bottom 10%. the top 10% on average earns 5.26 times more than the bottom 10% on average.
pct_female_headed_households <- pct_female_headed_households %>%
rename(neighborhood = csa2020)
female_cmbd <- updated_baltcity_race %>%
inner_join(pct_female_headed_households, by="neighborhood")
top_pcts <- distinct(top_10 %>%
select(neighborhood)) %>%
inner_join(female_cmbd, by = "neighborhood") %>%
select(femhhs21)
mean(top_pcts$femhhs21)
bottom_pcts <- distinct(bottom_10 %>%
select(neighborhood)) %>%
inner_join(female_cmbd, by = "neighborhood") %>%
select(femhhs21)
mean(bottom_pcts$femhhs21)
updated_baltcity_race %>%
slice_min(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood)
# The percentage
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood)
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020)
arrange(x2020(desc))
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020) %>%
arrange(x2020(desc))
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020) %>%
arrange(desc(x2020))
updated_baltcity_race %>%
slice_min(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020) %>%
arrange(desc(x2020))
# The percentage of nonwhite residents in Baltimore’s bottom 10% wealthiest neighborhoods?
updated_baltcity_race %>%
slice_min(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020) %>%
arrange(x2020)
# The percentage of nonwhite residents in Baltimore’s bottom 10% wealthiest neighborhoods?
top20_baltcity <- updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020) %>%
arrange(desc(x2020))
# As the code above shows, the percentage of non-white residents in Baltimore’s wealthiest neighborhood, North Baltimore/Guilford/Homeland, is 38.1%. Baltimore's second wealthiest neighborhood, North Baltimore/Guilford/Homeland, has 23.42% non-white residents. The third wealthiest neighborhood, Greater Roland Park/Poplar Hill, has a percentage of 33.24% non-white residents. The fourth wealthiest neighborhood, South Baltimore, has 11.51% non-white residents, and the fifth wealthiest neighborhood, Canton, has 13.15% non-white residents.
View(top20_baltcity)
updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020) %>%
arrange(desc(x2020))
top20_baltcity <- updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020) %>%
arrange(desc(x2020))
# As the code above shows, the percentage of non-white residents in Baltimore’s wealthiest neighborhood, North Baltimore/Guilford/Homeland, is 38.1%. Baltimore's second wealthiest neighborhood, North Baltimore/Guilford/Homeland, has 23.42% non-white residents. The third wealthiest neighborhood, Greater Roland Park/Poplar Hill, has a percentage of 33.24% non-white residents. The fourth wealthiest neighborhood, South Baltimore, has 11.51% non-white residents, and the fifth wealthiest neighborhood, Canton, has 13.15% non-white residents.
ggplot(top20_baltcity, aes(neighborhood, x2020, fill = x2020)) +
geom_col(position = "dodge") +
geom_text(aes(label=x2020), vjust = -.5, size = 2.5) +
labs(
title="The Top 10% Wealthiest Neighborhoods in Baltimore",
x = "Neighborhood",
y = "Median Income",
caption = "North Baltimore/Guilford/Homeland, North Baltimore/Guilford/Homeland,
and Greater Roland Park/Poplar Hill are the top three wealthiest neighborhoods.
source: baltcity_income_clean.csv")
top10_baltcity <- updated_baltcity_race %>%
slice_max(x2020, n = 20) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020) %>%
arrange(desc(x2020))
ggplot(top10_baltcity, aes(neighborhood, x2020, fill = x2020)) +
geom_col(position = "dodge") +
geom_text(aes(label=x2020), vjust = -.5, size = 2.5) +
labs(
title="The Top 10% Wealthiest Neighborhoods in Baltimore",
x = "Neighborhood",
y = "Median Income",
caption = "North Baltimore/Guilford/Homeland, North Baltimore/Guilford/Homeland,
and Greater Roland Park/Poplar Hill are the top three wealthiest neighborhoods.
source: baltcity_income_clean.csv")
top10_baltcity <- updated_baltcity_race %>%
slice_max(x2020, n = 10) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020) %>%
arrange(desc(x2020))
ggplot(top10_baltcity, aes(neighborhood, x2020, fill = x2020)) +
geom_col(position = "dodge") +
geom_text(aes(label=x2020), vjust = -.5, size = 2.5) +
labs(
title="The Top 10% Wealthiest Neighborhoods in Baltimore",
x = "Neighborhood",
y = "Median Income",
caption = "North Baltimore/Guilford/Homeland, North Baltimore/Guilford/Homeland,
and Greater Roland Park/Poplar Hill are the top three wealthiest neighborhoods.
source: baltcity_income_clean.csv")
top5_baltcity <- updated_baltcity_race %>%
slice_max(x2020, n = 5) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020) %>%
arrange(desc(x2020))
ggplot(top5_baltcity, aes(neighborhood, x2020, fill = x2020)) +
geom_col(position = "dodge") +
geom_text(aes(label=x2020), vjust = -.5, size = 2.5) +
labs(
title="The Top 10% Wealthiest Neighborhoods in Baltimore",
x = "Neighborhood",
y = "Median Income",
caption = "North Baltimore/Guilford/Homeland, North Baltimore/Guilford/Homeland,
and Greater Roland Park/Poplar Hill are the top three wealthiest neighborhoods.
source: baltcity_income_clean.csv")
top5_baltcity <- updated_baltcity_race %>%
slice_max(x2020, n = 5) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020) %>%
arrange(desc(x2020))
ggplot(top5_baltcity, aes(neighborhood, x2020, fill = x2020)) +
geom_col(position = "dodge") +
geom_text(aes(label=x2020), vjust = -.5, size = 2.5) +
labs(
title="The Top 10% Wealthiest Neighborhoods in Baltimore",
x = "Neighborhood",
y = "Median Income",
caption = "North Baltimore/Guilford/Homeland, North Baltimore/Guilford/Homeland, and Greater Roland Park/Poplar Hill are the top three wealthiest neighborhoods.
source: baltcity_income_clean.csv")
top5_baltcity <- updated_baltcity_race %>%
slice_max(x2020, n = 5) %>%
mutate(x2020_nonwhite=((x2020_total-x2020_white)/x2020_total)) %>%
select(x2020_nonwhite, neighborhood, x2020) %>%
arrange(desc(x2020))
ggplot(top5_baltcity, aes(neighborhood, x2020, fill = x2020)) +
geom_col(position = "dodge") +
geom_text(aes(label=x2020), vjust = -.5, size = 2.5) +
labs(
title="The Top 10% Wealthiest Neighborhoods in Baltimore",
x = "Neighborhood",
y = "Median Income",
caption = "North Baltimore/Guilford/Homeland, North Baltimore/Guilford/Homeland,
and Greater Roland Park/Poplar Hill are the top three wealthiest neighborhoods.
source: baltcity_income_clean.csv")
