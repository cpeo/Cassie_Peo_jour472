baltcity_race<- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
getwd()
setwd("~/GitHub/Code/Cassie_Peo_jour472/lab_04/pre_lab_04")
baltcity_race<- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
baltcity_race<- read_csv("baltcity_race_8_13.csv") %>% as.data.frame()
baltcity_race <- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
baltcity_race <- read_csv("baltcity_race_8_13.csv")
getwd()
setwd("~/GitHub/Code/Cassie_Peo_jour472/lab_04/pre_lab_04")
baltcity_race <- read_csv("baltcity_race_8_13.csv")
setwd("~/GitHub/Code/Cassie_Peo_jour472/lab_04")
baltcity_race <- read_csv("baltcity_race_8_13.csv")
setwd("~/GitHub/Code/Cassie_Peo_jour472/lab_04/pre_lab_04")
baltcity_race <- read_csv("baltcity_race_8_13.csv")
library(tidyverse)
#loading 2020 and 2010 Baltimore City population by race
baltcity_race <- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
View(baltcity_race)
baltcity_race %>%
select(census_tract, x2020_black, x2020_white) %>%
mutate(ratio_w_b =(x2020_black/x2020_white)) %>%
arrange(desc(ratio_w_b))
#Use the baltcity_race table, use the mutate command to create a new variable called ratio_w_b which will be the 2020 black population by census tract divided into the 2020 white population. Sort in descending order, highest to lowest
baltcity_race %>%
select(census_tract, x2020_black, x2020_white) %>%
mutate(ratio_w_b =(x2020_black/x2020_white)) %>%
arrange(desc(ratio_w_b))
#Use the baltcity_race table, use the mutate command to create a new variable called ratio_w_b which will be the 2020 black population by census tract divided into the 2020 white population. Sort in descending order, highest to lowest
baltcity_race %>%
select(census_tract, x2020_black, x2020_white) %>%
mutate(ratio_w_b =(x2020_black/x2020_white)) %>%
filter(x2020_white > 0) %>%
arrange(desc(ratio_w_b))
#Use the baltcity_race table, use the mutate command to create a new variable called ratio_w_b which will be the 2020 black population by census tract divided into the 2020 white population. Sort in descending order, highest to lowest
ratiowb <- baltcity_race %>%
select(census_tract, x2020_black, x2020_white) %>%
mutate(ratio_w_b =(x2020_black/x2020_white)) %>%
filter(x2020_white > 0) %>%
arrange(desc(ratio_w_b))
#Use the baltcity_race table, use the mutate command to create a new variable called ratio_w_b which will be the 2020 black population by census tract divided into the 2020 white population. Sort in descending order, highest to lowest
ratiowb <- baltcity_race %>%
select(census_tract, x2020_black, x2020_white) %>%
mutate(ratio_w_b =(x2020_black/x2020_white)) %>%
filter(x2020_white > 0) %>%
arrange(desc(ratio_w_b))
head(ratiowb)
ratiowb <- baltcity_race %>%
select(census_tract, x2020_black, x2020_white) %>%
mutate(ratio_w_b = round(x2020_black/x2020_white,2)) %>%
arrange(desc(ratio_w_b))
ratiowb <- baltcity_race %>%
select(census_tract, x2020_black, x2020_white) %>%
mutate(ratio_w_b = round(x2020_black/x2020_white,2)) %>%
arrange(desc(ratio_w_b))
baltcity_race %>%
select(census_tract, x2020_black, x2020_white) %>%
mutate(ratio_w_b = round(x2020_black/x2020_white,2)) %>%
arrange(desc(ratio_w_b))
baltcity_race %>%
select(census_tract, x2020_black, x2020_white) %>%
mutate(ratio_w_b = round(x2020_black/x2020_white,2)) %>%
arrange(desc(ratio_w_b))
sum(baltcity_race$x2020_white)
baltcity_race %>%
select(census_tract, x2020_black, x2020_white) %>%
mutate(ratio_w_b = round(x2020_black/x2020_white,2)) %>%
arrange(desc(ratio_w_b))
sum(baltcity_race$x2020_white, na.rm = TRUE)
baltcity_race %>%
select(census_tract, x2020_white, x2020_total) %>%
mutate(pct_white = round(x2020_white/x2020_total,2)) %>%
arrange(desc(pct_white))
baltcity_race %>%
select(census_tract, x2020_white) %>%
mutate(pct_white =(x2020_white/sum(baltcity_race$x2020_white, na.rm = TRUE))) %>%
arrange(desc(pct_white))
