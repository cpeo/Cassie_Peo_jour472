# Cassie Peo test file R
install.packages("tidyverse")
library(tidyverse)
install.packages("janitor")
install.packages("rmarkdown")
install.packages("skimr")
install.packages("swirl")
5+5
my_name <- "Cassie"
my_name
getwd()
setwd("C:/Users/cassi/AppData/Local/Temp/1597395f-630b-470e-9cec-adc43ab78617_pre_lab_03.zip.617")
setwd("~/GitHub/Code/Cassie_Peo_jour472")
getwd()
help.start()
help.start()
help.start()
#install.packages("tidyverse")
install.packages("rio")
install.packages("janitor")
install.packages("rio")
library(tidyverse)
library(rio)
library(janitor)
MediaBucks <- rio::import("https://docs.google.com/spreadsheets/d/1jkbQFwIdaWv8K00Ad6Wq7ZxFTUPFQA-g/edit#gid=1655992481", which = "RealMediaSalaries2")
View(MediaBucks)
View(my_name)
nrow(MediaBucks)
ncol(MediaBucks)
dim(MediaBucks)
colnames(MediaBucks)
names(MediaBucks)
str(MediaBucks)
head(MediaBucks)
summary(MediaBucks$Salary)
sum(MediaBucks$Salary, na.rm=TRUE)
mean(MediaBucks$Salary, na.rm=TRUE)
quantile(MediaBucks$Salary, c(0.1, 0.2, 0.3, 0.4,0.5, 0.6, 0.7, 0.8, 0.9), na.rm=TRUE)
quantile(MediaBucks$Salary, c(0.25, 0.50, 0.75, 0.9, 0.99), na.rm=TRUE)
MediaBucks %>%
select(Gender, Salary) %>%
group_by(Gender) %>%
summarize(Total = sum(Salary, na.rm=TRUE))
MediaBucks %>%
count(Gender) %>%
arrange(desc(n))
MediaBucks %>%
select(Gender, Salary) %>%
group_by(Gender) %>%
summarize(Avg_Salary = mean(Salary, na.rm=TRUE))
MediaSalary <- MediaBucks %>%
filter(Salary >= 1000)
MediaBucks %>%
select(COMPANY, Salary) %>%
slice_max(Salary, n = 10)
library(tidyverse)
glimpse(baltcity_income)
library(tidyverse)
glimpse(baltcity_income)
library(tidyverse)
#Set working directory to .../data_journalism_class/04_labs/lab_04/pre_lab_04
baltcity_income<- read_csv("baltcity_income_clean.csv") %>%
as.data.frame()
glimpse(baltcity_income)
head(baltcity_income)
baltcity_income %>%
group_by(Neighborhood) %>%
summarise(
count_tracts = n()
)
baltcity_income %>%
group_by(Neighborhood) %>%
summarise(
count_tracts = n()
) %>%
arrange(desc(count_tracts))
baltcity_income %>%
summarise(
count_tracts = n()
)
baltcity_income %>%
select(Neighborhood, x2010, x2016, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_median = median(x2020, na.rm=TRUE),
min_2020 = min(x2020, na.rm=TRUE),
max_2020 = max(x2020, na.rm=TRUE)
)
summary(baltcity_income$x2020)
baltcity_income %>%
#temp code - remove later
as.data.frame() %>%
select(Neighborhood, x2020) %>%
filter(x2020 ==13559)
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter((x2020 ==13559) | (x2020==199531))
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter(x2020 > 100000) %>%
arrange(desc(x2020))
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_avg = mean(x2020, na.rm=TRUE))
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
min_2020 = min(x2020, na.rm=TRUE),
max_2020 = max(x2020, na.rm=TRUE))
baltcity_income %>%
select(Neighborhood, x2010, x2016, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_median = median(x2020, na.rm=TRUE),
x2020_avg = mean(x2020, na.rm=TRUE),
x2016_median = median(x2016, na.rm=TRUE),
x2016_avg = mean(x2016, na.rm=TRUE),
x2010_median = median(x2010, na.rm=TRUE),
x2010_avg = mean(x2010, na.rm=TRUE))
#loading 2020 and 2010 Baltimore City population by race
baltcity_race <- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
baltcity_race %>%
select(x2020_white, x2020_black) %>%
summarize(
white_total = sum(x2020_white, na.rm = TRUE),
black_total = sum(x2020_black, na.rm = TRUE)
)
baltcity_income %>%
filter(x2020 < 56311.21)
less_median = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
less_median = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count
count / 200
count / 200 * 100
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count
count / 200 * 100
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count
# 121
count / 200 * 100
# 60.5%
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count = n()
)
count
# 121
count / 200 * 100
# 60.5%
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count
# 121
count / 200 * 100
# 60.5%
library(tidyverse)
glimpse(baltcity_income)
head(baltcity_income)
baltcity_income %>%
group_by(Neighborhood) %>%
summarise(
count_tracts = n()
)
baltcity_income %>%
group_by(Neighborhood) %>%
summarise(
count_tracts = n()
) %>%
arrange(desc(count_tracts))
baltcity_income %>%
summarise(
count_tracts = n()
)
baltcity_income %>%
select(Neighborhood, x2010, x2016, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_median = median(x2020, na.rm=TRUE),
min_2020 = min(x2020, na.rm=TRUE),
max_2020 = max(x2020, na.rm=TRUE)
)
summary(baltcity_income$x2020)
baltcity_income %>%
#temp code - remove later
as.data.frame() %>%
select(Neighborhood, x2020) %>%
filter(x2020 ==13559)
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter((x2020 ==13559) | (x2020==199531))
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter(x2020 > 100000) %>%
arrange(desc(x2020))
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_avg = mean(x2020, na.rm=TRUE))
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
min_2020 = min(x2020, na.rm=TRUE),
max_2020 = max(x2020, na.rm=TRUE))
baltcity_income %>%
select(Neighborhood, x2010, x2016, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_median = median(x2020, na.rm=TRUE),
x2020_avg = mean(x2020, na.rm=TRUE),
x2016_median = median(x2016, na.rm=TRUE),
x2016_avg = mean(x2016, na.rm=TRUE),
x2010_median = median(x2010, na.rm=TRUE),
x2010_avg = mean(x2010, na.rm=TRUE))
#loading 2020 and 2010 Baltimore City population by race
baltcity_race <- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
baltcity_race %>%
select(x2020_white, x2020_black) %>%
summarize(
white_total = sum(x2020_white, na.rm = TRUE),
black_total = sum(x2020_black, na.rm = TRUE)
)
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count
# 121
count / 200 * 100
# 60.5%
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_avg = mean(x2020, na.rm=TRUE))
