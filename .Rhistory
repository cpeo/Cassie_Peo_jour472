library(tidyverse)
#Set working directory to .../data_journalism_class/04_labs/lab_04/pre_lab_04
baltcity_income<- read_csv("baltcity_income_clean.csv") %>%
as.data.frame()
glimpse(baltcity_income)
head(baltcity_income)
baltcity_income %>%
group_by(Neighborhood) %>%
summarise(
count_tracts = n()
)
baltcity_income %>%
group_by(Neighborhood) %>%
summarise(
count_tracts = n()
) %>%
arrange(desc(count_tracts))
baltcity_income %>%
summarise(
count_tracts = n()
)
baltcity_income %>%
select(Neighborhood, x2010, x2016, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_median = median(x2020, na.rm=TRUE),
min_2020 = min(x2020, na.rm=TRUE),
max_2020 = max(x2020, na.rm=TRUE)
)
summary(baltcity_income$x2020)
baltcity_income %>%
#temp code - remove later
as.data.frame() %>%
select(Neighborhood, x2020) %>%
filter(x2020 ==13559)
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter((x2020 ==13559) | (x2020==199531))
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter(x2020 > 100000) %>%
arrange(desc(x2020))
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_avg = mean(x2020, na.rm=TRUE))
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
min_2020 = min(x2020, na.rm=TRUE),
max_2020 = max(x2020, na.rm=TRUE))
baltcity_income %>%
select(Neighborhood, x2010, x2016, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_median = median(x2020, na.rm=TRUE),
x2020_avg = mean(x2020, na.rm=TRUE),
x2016_median = median(x2016, na.rm=TRUE),
x2016_avg = mean(x2016, na.rm=TRUE),
x2010_median = median(x2010, na.rm=TRUE),
x2010_avg = mean(x2010, na.rm=TRUE))
#loading 2020 and 2010 Baltimore City population by race
baltcity_race <- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
baltcity_race %>%
select(x2020_white, x2020_black) %>%
summarize(
white_total = sum(x2020_white, na.rm = TRUE),
black_total = sum(x2020_black, na.rm = TRUE)
)
baltcity_income %>%
filter(x2020 < 56311.21)
less_median = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
less_median = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count
count / 200
count / 200 * 100
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count
count / 200 * 100
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count
# 121
count / 200 * 100
# 60.5%
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count = n()
)
count
# 121
count / 200 * 100
# 60.5%
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count
# 121
count / 200 * 100
# 60.5%
library(tidyverse)
glimpse(baltcity_income)
head(baltcity_income)
baltcity_income %>%
group_by(Neighborhood) %>%
summarise(
count_tracts = n()
)
baltcity_income %>%
group_by(Neighborhood) %>%
summarise(
count_tracts = n()
) %>%
arrange(desc(count_tracts))
baltcity_income %>%
summarise(
count_tracts = n()
)
baltcity_income %>%
select(Neighborhood, x2010, x2016, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_median = median(x2020, na.rm=TRUE),
min_2020 = min(x2020, na.rm=TRUE),
max_2020 = max(x2020, na.rm=TRUE)
)
summary(baltcity_income$x2020)
baltcity_income %>%
#temp code - remove later
as.data.frame() %>%
select(Neighborhood, x2020) %>%
filter(x2020 ==13559)
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter((x2020 ==13559) | (x2020==199531))
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter(x2020 > 100000) %>%
arrange(desc(x2020))
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_avg = mean(x2020, na.rm=TRUE))
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
min_2020 = min(x2020, na.rm=TRUE),
max_2020 = max(x2020, na.rm=TRUE))
baltcity_income %>%
select(Neighborhood, x2010, x2016, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_median = median(x2020, na.rm=TRUE),
x2020_avg = mean(x2020, na.rm=TRUE),
x2016_median = median(x2016, na.rm=TRUE),
x2016_avg = mean(x2016, na.rm=TRUE),
x2010_median = median(x2010, na.rm=TRUE),
x2010_avg = mean(x2010, na.rm=TRUE))
#loading 2020 and 2010 Baltimore City population by race
baltcity_race <- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
baltcity_race %>%
select(x2020_white, x2020_black) %>%
summarize(
white_total = sum(x2020_white, na.rm = TRUE),
black_total = sum(x2020_black, na.rm = TRUE)
)
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count
# 121
count / 200 * 100
# 60.5%
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_avg = mean(x2020, na.rm=TRUE))
library(tidyverse)
#Set working directory to .../data_journalism_class/04_labs/lab_04/pre_lab_04
baltcity_income<- read_csv("baltcity_income_clean.csv") %>%
as.data.frame()
library(tidyverse)
glimpse(baltcity_income)
head(baltcity_income)
baltcity_income %>%
group_by(Neighborhood) %>%
summarise(
count_tracts = n()
)
baltcity_income %>%
group_by(Neighborhood) %>%
summarise(
count_tracts = n()
) %>%
arrange(desc(count_tracts))
baltcity_income %>%
summarise(
count_tracts = n()
)
baltcity_income %>%
select(Neighborhood, x2010, x2016, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_median = median(x2020, na.rm=TRUE),
min_2020 = min(x2020, na.rm=TRUE),
max_2020 = max(x2020, na.rm=TRUE)
)
summary(baltcity_income$x2020)
baltcity_income %>%
#temp code - remove later
as.data.frame() %>%
select(Neighborhood, x2020) %>%
filter(x2020 ==13559)
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter((x2020 ==13559) | (x2020==199531))
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter(x2020 > 100000) %>%
arrange(desc(x2020))
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_avg = mean(x2020, na.rm=TRUE))
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
min_2020 = min(x2020, na.rm=TRUE),
max_2020 = max(x2020, na.rm=TRUE))
baltcity_income %>%
select(Neighborhood, x2010, x2016, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_median = median(x2020, na.rm=TRUE),
x2020_avg = mean(x2020, na.rm=TRUE),
x2016_median = median(x2016, na.rm=TRUE),
x2016_avg = mean(x2016, na.rm=TRUE),
x2010_median = median(x2010, na.rm=TRUE),
x2010_avg = mean(x2010, na.rm=TRUE))
#loading 2020 and 2010 Baltimore City population by race
baltcity_race <- read_csv("baltcity_race_8_13.csv") %>%
as.data.frame()
baltcity_race %>%
select(x2020_white, x2020_black) %>%
summarize(
white_total = sum(x2020_white, na.rm = TRUE),
black_total = sum(x2020_black, na.rm = TRUE)
)
count = baltcity_income %>%
filter(x2020 < 56311.21) %>%
summarize(
count_tracks = n()
)
count
# 121
count / 200 * 100
# 60.5%
count = baltcity_income %>%
filter(x2020 < 49875) %>%
summarize(
count_tracks = n()
)
count
# 121
count / 200 * 100
# 60.5%
count = baltcity_income %>%
filter(x2020 < 49875) %>%
summarize(
count_tracks = n()
)
count
# 97
count / 200 * 100
# 48.5%
count = baltcity_income %>%
filter(x2020 < 52164) %>%
summarize(
count_tracks = n()
)
count
# 97
count / 200 * 100
# 48.5%
library(tidyverse)
library(ggplot2)
library(hrbrthemes)
library(plotly)
library(ggthemes)
library(RColorBrewer)
library(svglite)
library(geofacet)
library(ggrepel)
library(gganimate)
library(ggtext)
library(dplyr)
library(ggplot2)
library(knitr)
library(psych)
library(lme4)
library(boot)
library(ggeffects)
library(DescTools)
suicide_data_csv <- read_csv("Firearm_suicide_homicide_dataset.csv")
view(suicide_data_csv)
maryland_data <- suicide_data_csv %>%
filter(state == "Maryland")
homicides_more_suicides <- suicide_data_csv %>%
filter(year == "2020") %>%
filter(firearm_homicides > firearm_suicides)
linegraph_image <-
suicide_data_csv %>%
filter(state == "Maryland") %>%
ggplot(aes(x=year)) +
geom_line(aes(y=firearm_homicides, color="cornflowerblue")) +
geom_line(aes(y=firearm_suicides, color="purple")) +
theme_minimal() +
labs(title="Firearm homicides and suicides by year in MD",
col = " ",
y = " ") +
scale_color_discrete(labels=c('Homicides', 'Suicides'))
linegraph_image
linegraph_image <-
suicide_data_csv %>%
filter(state == "Virginia") %>%
ggplot(aes(x=year)) +
geom_line(aes(y=firearm_homicides, color="cornflowerblue")) +
geom_line(aes(y=firearm_suicides, color="purple")) +
theme_minimal() +
labs(title="Firearm homicides and suicides by year in VA",
col = " ",
y = " ") +
scale_color_discrete(labels=c('Homicides', 'Suicides'))
linegraph_image
linegraph_image <-
suicide_data_csv %>%
filter(state == "Maryland") %>%
ggplot(aes(x=year)) +
geom_line(aes(y=nonfirearm_homicides, color="cornflowerblue")) +
geom_line(aes(y=firearm_homicides, color="purple")) +
theme_minimal() +
labs(title="Firearm homicides compared to nonfirearm homicides by year in MD",
col = " ",
y = " ") +
scale_color_discrete(labels=c('nonfirearm', 'firearm'))
linegraph_image
linegraph_image <-
suicide_data_csv %>%
filter(state == "Maryland") %>%
ggplot(aes(x=year)) +
geom_line(aes(y=white_fss, color="cornflowerblue")) +
geom_line(aes(y=nonwhite_fss, color="purple")) +
theme_minimal() +
labs(title="White vs nonwhite FSS by year in MD",
col = " ",
y = " ") +
scale_color_discrete(labels=c('white', 'nonwhite'))
linegraph_image
county_suicides <- read_csv("suicides by different firearms by county.csv")
view(county_suicides)
linegraph_image <-
suicide_data_csv %>%
filter(state == "Maryland") %>%
ggplot(aes(x=year)) +
geom_line(aes(y=fss, color="cornflowerblue")) +
geom_line(aes(y=total_suicides, color="purple")) +
theme_minimal() +
labs(title="Maryland FSS vs total suicides in MD",
col = " ",
y = " ") +
scale_color_discrete(labels=c('fss', 'total_suicides'))
linegraph_image
suicide_data_csv <- mutate(suicide_data_csv, suicide_rate = (firearm_suicides / total_population)*100000)
maryland_data <- suicide_data_csv %>%
filter(state == "Maryland")
homicides_more_suicides <- suicide_data_csv %>%
filter(year == "2020") %>%
filter(firearm_homicides > firearm_suicides)
library(tidyverse)
library(ggplot2)
library(hrbrthemes)
library(plotly)
library(ggthemes)
library(RColorBrewer)
library(svglite)
library(geofacet)
library(ggrepel)
library(gganimate)
library(ggtext)
library(dplyr)
library(ggplot2)
library(knitr)
library(psych)
library(lme4)
library(boot)
library(ggeffects)
library(DescTools)
suicide_data_csv <- read_csv("Firearm_suicide_homicide_dataset.csv")
view(suicide_data_csv)
maryland_data <- suicide_data_csv %>%
filter(state == "Maryland")
homicides_more_suicides <- suicide_data_csv %>%
filter(year == "2020") %>%
filter(firearm_homicides > firearm_suicides)
linegraph_image <-
suicide_data_csv %>%
filter(state == "Maryland") %>%
ggplot(aes(x=year)) +
geom_line(aes(y=firearm_homicides, color="cornflowerblue")) +
geom_line(aes(y=firearm_suicides, color="purple")) +
theme_minimal() +
labs(title="Firearm homicides and suicides by year in MD",
col = " ",
y = " ") +
scale_color_discrete(labels=c('Homicides', 'Suicides'))
linegraph_image
linegraph_image <-
suicide_data_csv %>%
filter(state == "Virginia") %>%
ggplot(aes(x=year)) +
geom_line(aes(y=firearm_homicides, color="cornflowerblue")) +
geom_line(aes(y=firearm_suicides, color="purple")) +
theme_minimal() +
labs(title="Firearm homicides and suicides by year in VA",
col = " ",
y = " ") +
scale_color_discrete(labels=c('Homicides', 'Suicides'))
linegraph_image
linegraph_image <-
suicide_data_csv %>%
filter(state == "Maryland") %>%
ggplot(aes(x=year)) +
geom_line(aes(y=nonfirearm_homicides, color="cornflowerblue")) +
geom_line(aes(y=firearm_homicides, color="purple")) +
theme_minimal() +
labs(title="Firearm homicides compared to nonfirearm homicides by year in MD",
col = " ",
y = " ") +
scale_color_discrete(labels=c('nonfirearm', 'firearm'))
linegraph_image
linegraph_image <-
suicide_data_csv %>%
filter(state == "Maryland") %>%
ggplot(aes(x=year)) +
geom_line(aes(y=white_fss, color="cornflowerblue")) +
geom_line(aes(y=nonwhite_fss, color="purple")) +
theme_minimal() +
labs(title="White vs nonwhite FSS by year in MD",
col = " ",
y = " ") +
scale_color_discrete(labels=c('white', 'nonwhite'))
linegraph_image
county_suicides <- read_csv("suicides by different firearms by county.csv")
view(county_suicides)
linegraph_image <-
suicide_data_csv %>%
filter(state == "Maryland") %>%
ggplot(aes(x=year)) +
geom_line(aes(y=fss, color="cornflowerblue")) +
geom_line(aes(y=total_suicides, color="purple")) +
theme_minimal() +
labs(title="Maryland FSS vs total suicides in MD",
col = " ",
y = " ") +
scale_color_discrete(labels=c('fss', 'total_suicides'))
linegraph_image
suicide_data_csv <- mutate(suicide_data_csv, suicide_rate = (firearm_suicides / total_population)*100000)
suicide_data_csv
